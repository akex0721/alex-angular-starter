{"version":3,"file":"authentication.service.js","sourceRoot":"","sources":["authentication.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Http, Response} from \"@angular/http\";\r\nimport \"rxjs/Rx\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {Subject} from \"rxjs/Subject\";\r\nimport {ClientConfig} from \"../model/client-config\";\r\nimport {User} from \"../model/user\";\r\nimport {Cookie} from \"ng2-cookies/ng2-cookies\";\r\nimport {ConfigService} from \"./config.service\";\r\nimport {AuthenticatedHttp} from \"./authenticated.http\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  private token:string;\r\n  private userSource = new Subject<User>();\r\n  user = this.userSource.asObservable();\r\n  currentUser: User=null;\r\n\r\n  private configSource = new Subject<ClientConfig>();\r\n  clientConfig = this.configSource.asObservable();\r\n  config:ClientConfig = null;\r\n\r\n  private status:number = null;\r\n\r\n  constructor(private http:Http, private authenticatedHttp:AuthenticatedHttp, private configService:ConfigService) {\r\n    console.log('Authentcationserver constructed');\r\n    this.startup();\r\n  }\r\n\r\n  logout() {\r\n    console.log('logging out');\r\n    this.user = null;\r\n    Cookie.set('pcssso', '' ,-1);\r\n    sessionStorage.removeItem('pcsssotoken');\r\n    this.authenticatedHttp.post('/security-api/logout','').subscribe(\r\n        result => location.href = this.config.homePageUrl,\r\n        error =>{\r\n          console.warn('logout failed');\r\n          location.href = this.config.homePageUrl\r\n        }\r\n    );\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.user !== null;\r\n  }\r\n\r\n  private updateUser(user:User) {\r\n    this.userSource.next(user);\r\n    this.currentUser=user;\r\n  }\r\n\r\n  getUserProfile():Observable<User> {\r\n    return this.authenticatedHttp.get('/security-api/userprofile')\r\n      .map(this.extractData);\r\n  }\r\n\r\n  private extractData(res:Response) {\r\n    console.log(res);\r\n    let body = res.json();\r\n    if (body.success) {\r\n      let result = body.result;\r\n      return new User(result.fullName, result.organisationShortname, result.organisationFullname, result.roles, result.organisationTypes, result.language);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getUserProfileAndClientConfig() {\r\n    this.getUserProfile()\r\n      .subscribe(\r\n        user => {\r\n          this.updateUser(user);\r\n          this.getClientConfig();\r\n        },\r\n        error => this.errorHandling(error)\r\n      );\r\n  }\r\n\r\n  private getClientConfig() {\r\n    this.configService.getClientConfig()\r\n      .subscribe(\r\n        config => {\r\n          this.configSource.next(config);\r\n          this.config = config;\r\n        },\r\n        error => this.errorHandling(error)\r\n      );\r\n  }\r\n\r\n  startup():any {\r\n      this.token = Cookie.get('pcssso');\r\n      if (this.token !== null) {\r\n        this.getUserProfileAndClientConfig();\r\n      } else {\r\n        this.token = sessionStorage.getItem('pcsssotoken');\r\n        if (this.token !== null) {\r\n          if (this.user != null)\r\n            this.getUserProfileAndClientConfig();\r\n        } else {\r\n          this.configService.getClientConfig()\r\n            .subscribe(\r\n              config => location.href = config.homePageUrl\r\n            );\r\n        }\r\n      }\r\n  }\r\n\r\n  private errorHandling(errorResponse:Response) {\r\n    let status = errorResponse.status;\r\n    if (status === 401 || status === 403) {\r\n      this.configService.getClientConfig()\r\n        .subscribe(\r\n          config => location.href = config.homePageUrl,\r\n          error => this.errorHandling(error)\r\n        );\r\n    } else {\r\n      console.log('Service not avalailable, status: ' + status);\r\n    }\r\n  }\r\n}\r\n"]}