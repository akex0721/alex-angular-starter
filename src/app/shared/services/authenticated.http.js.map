{"version":3,"file":"authenticated.http.js","sourceRoot":"","sources":["authenticated.http.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,qBAA4B,eAAe,CAAC,CAAA;AAC5C,4BAAqB,yBACrB,CAAC,CAD6C;AAC9C,QAAO,SAAS,CAAC,CAAA;AAGjB;IAEE,2BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAC9B,CAAC;IAED,yCAAa,GAAb,UAAc,OAAe;QAC3B,IAAI,KAAK,GAAU,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACzD,EAAE,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;YACT,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC;QACrD,CAAC;QACD,IAAI,CAAA,CAAC;YACH,IAAI,WAAW,GAAG,oBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAA,CAAC;gBACvB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,GAAG,WAAW,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,gCAAgC,CAAC,CAAC;IAChE,CAAC;IAGD,+BAAG,GAAH,UAAI,GAAY;QACd,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YACxB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAED,gCAAI,GAAJ,UAAK,GAAW,EAAG,IAAS;QAC1B,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;YAC/B,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN,UAAO,GAAW;QAChB,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YAC3B,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;IA3CH;QAAC,iBAAU,EAAE;;yBAAA;IA4Cb,wBAAC;AAAD,CAAC,AA3CD,IA2CC;AA3CY,yBAAiB,oBA2C7B,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\nimport {Cookie} from 'ng2-cookies/ng2-cookies'\r\nimport 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class AuthenticatedHttp{\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  createHeaders(headers:Headers) {\r\n    let token :String =sessionStorage.getItem('pcsssoToken');\r\n    if(token) {\r\n      headers.append('Authorization', 'Bearer ' + token);\r\n    }\r\n    else{\r\n      let cookieToken = Cookie.get('pcssso');\r\n      if (cookieToken != null){\r\n        headers.append('Authorization', 'Bearer ' + cookieToken);\r\n      }\r\n    }\r\n    headers.set('Content-Type', 'application/json;charset=UTF-8');\r\n  }\r\n\r\n\r\n  get(url : string) {\r\n    let headers = new Headers();\r\n    this.createHeaders(headers);\r\n    return this.http.get(url, {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  post(url: string , data :any) {\r\n    let headers = new Headers();\r\n    this.createHeaders(headers);\r\n    return this.http.post(url, data, {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  delete(url :string) {\r\n    let headers = new Headers();\r\n    this.createHeaders(headers);\r\n    return this.http.delete(url, {\r\n      headers: headers\r\n    });\r\n  }\r\n}\r\n"]}